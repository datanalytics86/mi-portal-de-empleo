---
/**
 * Componente Skeleton
 *
 * Placeholder animado para mostrar mientras carga contenido
 */

interface Props {
  width?: string;
  height?: string;
  className?: string;
  variant?: 'text' | 'circular' | 'rectangular';
}

const {
  width = '100%',
  height = '1rem',
  className = '',
  variant = 'rectangular'
} = Astro.props;

const variantClasses = {
  text: 'rounded',
  circular: 'rounded-full',
  rectangular: 'rounded-lg'
};
---

<div
  class={`skeleton ${variantClasses[variant]} ${className}`}
  style={`width: ${width}; height: ${height};`}
></div>

<style>
  .skeleton {
    background: linear-gradient(
      90deg,
      #f0f0f0 0%,
      #e0e0e0 20%,
      #f0f0f0 40%,
      #f0f0f0 100%
    );
    background-size: 200% 100%;
    animation: loading 1.5s ease-in-out infinite;
  }

  @keyframes loading {
    0% {
      background-position: 200% 0;
    }
    100% {
      background-position: -200% 0;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .skeleton {
      animation: none;
      background: #f0f0f0;
    }
  }
</style>

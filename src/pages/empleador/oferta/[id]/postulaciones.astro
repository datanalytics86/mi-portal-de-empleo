---
/**
 * Vista de Postulaciones (MOCK VERSION)
 *
 * Lista todas las postulaciones recibidas para una oferta específica
 */

import Layout from '../../../../layouts/Layout.astro';
import { getMockSession } from '../../../../lib/mock-auth';
import { findOfertaById } from '../../../../data/mock-ofertas';
import { getPostulacionesByOferta, getPostulacionesStats } from '../../../../data/mock-postulaciones';
import { empleadorOwnsOferta } from '../../../../data/mock-empleador-ofertas';

export const prerender = false;

// Obtener sesión
const empleador = getMockSession(Astro.cookies);

// Si no hay sesión, redirigir
if (!empleador) {
  return Astro.redirect('/empleador/login');
}

// Obtener ID de la oferta desde URL
const { id } = Astro.params;

if (!id) {
  return Astro.redirect('/empleador/dashboard');
}

// Verificar que la oferta existe
const oferta = findOfertaById(id);

if (!oferta) {
  return Astro.redirect('/empleador/dashboard');
}

// Verificar que la oferta pertenece al empleador
const ownsOferta = empleadorOwnsOferta(empleador.id, id);

if (!ownsOferta) {
  return Astro.redirect('/empleador/dashboard');
}

// Obtener postulaciones
const postulacionesList = getPostulacionesByOferta(id);
const stats = getPostulacionesStats(id);
---

<Layout title={`Postulaciones - ${oferta.titulo}`}>
  <div class="min-h-screen bg-surface">
    <!-- Header -->
    <header class="bg-white border-b border-border">
      <div class="container mx-auto px-4 py-4">
        <div class="flex items-center justify-between">
          <div>
            <div class="flex items-center gap-3 mb-1">
              <a
                href="/empleador/dashboard"
                class="text-text-secondary hover:text-text-primary transition"
                title="Volver al dashboard"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
              </a>
              <h1 class="text-2xl font-semibold text-text-primary">
                Postulaciones
              </h1>
            </div>
            <p class="text-sm text-text-secondary pl-8">
              {oferta.titulo}
            </p>
          </div>
          <div>
            <span class="inline-flex items-center px-4 py-2 rounded-lg bg-blue-50 text-accent font-medium">
              {stats.total} {stats.total === 1 ? 'postulación' : 'postulaciones'}
            </span>
          </div>
        </div>
      </div>
    </header>

    <!-- Contenido Principal -->
    <main class="container mx-auto px-4 py-8">
      <div class="max-w-5xl mx-auto">
        <!-- Información de la oferta -->
        <div class="bg-white rounded-lg shadow-sm border border-border p-6 mb-6">
          <div class="grid md:grid-cols-3 gap-6">
            <div>
              <h3 class="text-sm font-medium text-text-secondary mb-2">Detalles de la Oferta</h3>
              <dl class="space-y-2">
                <div>
                  <dt class="text-xs text-text-secondary">Empresa</dt>
                  <dd class="text-sm text-text-primary font-medium">{oferta.empresa}</dd>
                </div>
                <div>
                  <dt class="text-xs text-text-secondary">Comuna</dt>
                  <dd class="text-sm text-text-primary font-medium">{oferta.comuna}</dd>
                </div>
                <div>
                  <dt class="text-xs text-text-secondary">Tipo de Jornada</dt>
                  <dd class="text-sm text-text-primary font-medium">{oferta.tipo_jornada}</dd>
                </div>
              </dl>
            </div>

            <div>
              <h3 class="text-sm font-medium text-text-secondary mb-2">Estadísticas</h3>
              <dl class="space-y-2">
                <div>
                  <dt class="text-xs text-text-secondary">Total de postulaciones</dt>
                  <dd class="text-sm text-text-primary font-medium">{stats.total}</dd>
                </div>
                <div>
                  <dt class="text-xs text-text-secondary">Con datos de contacto</dt>
                  <dd class="text-sm text-text-primary font-medium">{stats.conContacto}</dd>
                </div>
                <div>
                  <dt class="text-xs text-text-secondary">Última semana</dt>
                  <dd class="text-sm text-text-primary font-medium">{stats.ultimaSemana}</dd>
                </div>
              </dl>
            </div>

            <div>
              <h3 class="text-sm font-medium text-text-secondary mb-2">Acciones</h3>
              <div class="space-y-2">
                <a
                  href={`/oferta/${oferta.id}`}
                  target="_blank"
                  class="block text-sm text-accent hover:text-accent-hover transition"
                >
                  Ver oferta pública →
                </a>
                <p class="text-xs text-text-secondary">
                  Publicado: {new Date(oferta.created_at).toLocaleDateString('es-CL')}
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Lista de postulaciones -->
        {postulacionesList.length === 0 ? (
          <div class="bg-white rounded-lg shadow-sm border border-border p-12 text-center">
            <svg class="w-16 h-16 mx-auto text-text-secondary mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
            </svg>
            <h3 class="text-lg font-semibold text-text-primary mb-2">
              Aún no hay postulaciones
            </h3>
            <p class="text-text-secondary">
              Cuando recibas candidatos, aparecerán aquí
            </p>
          </div>
        ) : (
          <div class="bg-white rounded-lg shadow-sm border border-border overflow-hidden">
            <div class="overflow-x-auto">
              <table class="w-full">
                <thead class="bg-surface border-b border-border">
                  <tr>
                    <th class="px-6 py-4 text-left text-xs font-medium text-text-secondary uppercase tracking-wider">
                      Candidato
                    </th>
                    <th class="px-6 py-4 text-left text-xs font-medium text-text-secondary uppercase tracking-wider">
                      Email
                    </th>
                    <th class="px-6 py-4 text-left text-xs font-medium text-text-secondary uppercase tracking-wider">
                      Fecha
                    </th>
                    <th class="px-6 py-4 text-center text-xs font-medium text-text-secondary uppercase tracking-wider">
                      CV
                    </th>
                  </tr>
                </thead>
                <tbody class="divide-y divide-border">
                  {postulacionesList.map((postulacion) => (
                    <tr class="hover:bg-surface transition">
                      <td class="px-6 py-4">
                        <div class="flex items-center gap-3">
                          <div class="w-10 h-10 rounded-full bg-accent flex items-center justify-center text-white font-medium">
                            {postulacion.nombre_candidato 
                              ? postulacion.nombre_candidato.charAt(0).toUpperCase()
                              : '?'}
                          </div>
                          <div>
                            <p class="text-sm font-medium text-text-primary">
                              {postulacion.nombre_candidato || 'Candidato anónimo'}
                            </p>
                            <p class="text-xs text-text-secondary">
                              ID: {postulacion.id}
                            </p>
                          </div>
                        </div>
                      </td>
                      <td class="px-6 py-4">
                        {postulacion.email_candidato ? (
                          <a
                            href={`mailto:${postulacion.email_candidato}`}
                            class="text-sm text-accent hover:text-accent-hover transition"
                          >
                            {postulacion.email_candidato}
                          </a>
                        ) : (
                          <span class="text-sm text-text-secondary italic">
                            No proporcionado
                          </span>
                        )}
                      </td>
                      <td class="px-6 py-4">
                        <div class="text-sm text-text-secondary">
                          <div>
                            {new Date(postulacion.created_at).toLocaleDateString('es-CL')}
                          </div>
                          <div class="text-xs">
                            {new Date(postulacion.created_at).toLocaleTimeString('es-CL', {
                              hour: '2-digit',
                              minute: '2-digit'
                            })}
                          </div>
                        </div>
                      </td>
                      <td class="px-6 py-4 text-center">
                        <button
                          class="download-cv-btn inline-flex items-center gap-2 px-4 py-2 bg-accent hover:bg-accent-hover text-white text-sm font-medium rounded-lg transition"
                          data-cv-url={postulacion.cv_url}
                          data-nombre={postulacion.nombre_candidato || 'candidato'}
                        >
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                          </svg>
                          Descargar CV
                        </button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        )}

        <!-- Nota informativa -->
        <div class="mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <div class="flex items-start gap-3">
            <svg class="w-5 h-5 text-accent flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div>
              <p class="text-sm text-accent font-medium mb-1">
                Modo Demo - Datos Simulados
              </p>
              <p class="text-sm text-text-secondary">
                Los CVs y datos de contacto son simulados. En producción, podrás descargar archivos reales y contactar candidatos.
              </p>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>
</Layout>

<script>
  // Simulación de descarga de CVs
  const downloadButtons = document.querySelectorAll('.download-cv-btn');
  
  downloadButtons.forEach(button => {
    button.addEventListener('click', () => {
      const cvUrl = button.getAttribute('data-cv-url');
      const nombre = button.getAttribute('data-nombre');
      
      // En modo demo, solo mostrar alerta
      alert(`📄 Descargando CV de ${nombre}\n\nRuta: ${cvUrl}\n\nEn producción, esto descargaría el archivo real desde el storage.`);
      
      console.log('[DEMO] Simulando descarga de CV:', {
        nombre,
        url: cvUrl
      });
    });
  });
</script>
